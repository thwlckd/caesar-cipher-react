{"version":3,"file":"static/js/653.ef3c8fc3.chunk.js","mappings":"qMAyCA,UArCmB,WACjB,IAAAA,GAAsBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAClBI,GAAsBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAqCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAAYD,EAAA,GAAEE,EAAYF,EAAA,GAMjC,OACEG,EAAAA,EAAAA,KAACC,EAAW,CAAAC,UACVC,EAAAA,EAAAA,MAACC,EAAI,CAAAF,SAAA,EACHC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACK,EAAU,CAACC,QAAQ,MAAKJ,SAAC,iBAC1BF,EAAAA,EAAAA,KAACO,EAAK,CACJC,GAAG,MACHC,KAAK,SACLC,MAAOpB,GAAO,GACdqB,SAAU,SAACC,GAAC,OAAKrB,EAAOsB,OAAOD,EAAEE,OAAOJ,OAAO,QAGnDP,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACK,EAAU,CAACC,QAAQ,MAAKJ,SAAC,wBAC1BF,EAAAA,EAAAA,KAACO,EAAK,CACJC,GAAG,MACHC,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACC,GAAC,OAAKjB,EAAOiB,EAAEE,OAAOJ,MAAM,QAG3CV,EAAAA,EAAAA,KAACe,EAAG,CAACC,QAzBY,WACrBjB,GAAakB,EAAAA,EAAAA,GAAS3B,EAAKI,GAC7B,EAuBmCQ,SAAC,YAC7BJ,IAAgBE,EAAAA,EAAAA,KAACkB,EAAM,CAAAhB,SAAEJ,QAIlC,EAIA,IAAMG,EAAckB,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4IASzBlB,EAAOe,EAAAA,GAAOI,IAAGC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMjBjB,EAAac,EAAAA,GAAOM,MAAKC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qDAKzBf,EAAQY,EAAAA,GAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qGAOpBP,EAAMI,EAAAA,GAAOU,OAAMC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wIASnBJ,EAASC,EAAAA,GAAOY,EAACC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6F","sources":["components/Encryption.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { shiftMsg } from '../utils/caesarCipher';\nimport styled from 'styled-components';\n\nconst Encryption = () => {\n  const [key, setKey] = useState('');\n  const [msg, setMsg] = useState('');\n  const [encryptedMsg, setEncrypted] = useState('');\n\n  const handleClickBtn = () => {\n    setEncrypted(shiftMsg(key, msg));\n  };\n\n  return (\n    <MainWrapper>\n      <Main>\n        <div>\n          <InputLabel htmlFor='key'>Shift value</InputLabel>\n          <Input\n            id='key'\n            type='number'\n            value={key || ''}\n            onChange={(e) => setKey(Number(e.target.value))}\n          />\n        </div>\n        <div>\n          <InputLabel htmlFor='msg'>Message to encrypt</InputLabel>\n          <Input\n            id='msg'\n            type='text'\n            value={msg}\n            onChange={(e) => setMsg(e.target.value)}\n          />\n        </div>\n        <Btn onClick={handleClickBtn}>Encrypt</Btn>\n        {encryptedMsg && <Result>{encryptedMsg}</Result>}\n      </Main>\n    </MainWrapper>\n  );\n};\n\nexport default Encryption;\n\nconst MainWrapper = styled.main`\n  display: inline-block;\n  position: fixed;\n  left: 50%;\n  transform: translateX(-50%);\n  padding-top: 30px;\n  width: 100%;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputLabel = styled.label`\n  margin-right: 10px;\n  font-size: 20px;\n`;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  font-size: 20px;\n  border-radius: 20px;\n  padding-left: 10px;\n`;\n\nconst Btn = styled.button`\n  padding: 20px 30px;\n  border: none;\n  border-radius: 20px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst Result = styled.p`\n  width: 50%;\n  font-size: 25px;\n  word-break: break-all;\n  text-align: center;\n`;\n"],"names":["_useState","useState","_useState2","_slicedToArray","key","setKey","_useState3","_useState4","msg","setMsg","_useState5","_useState6","encryptedMsg","setEncrypted","_jsx","MainWrapper","children","_jsxs","Main","InputLabel","htmlFor","Input","id","type","value","onChange","e","Number","target","Btn","onClick","shiftMsg","Result","styled","main","_templateObject","_taggedTemplateLiteral","div","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","p","_templateObject6"],"sourceRoot":""}